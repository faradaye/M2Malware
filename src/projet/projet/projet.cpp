// projet.cpp : définit le point d'entrée pour l'application console.
//

#include "stdafx.h"
#include<stdio.h>
#include<string.h>
#include <Windows.h>
#include <winternl.h>
#include <iostream>
#include "SHA256.h"

char debut_strcmp[] = {'\x8b', '\x54', '\x24', '\x04', '\x8b', '\x4c', '\x24', '\x08', '\xf7', '\xc2', '\x03', '\x00'};
typedef int (*type_strcmp) (const char *, const char *);

char debut_scanf[] = {'\x8b', '\xff', '\x55', '\x8b', '\xec', '\x8d', '\x45', '\x0c', '\x50', '\x6a', '\x00', '\xff'};
typedef int (*type_scanf) (const char *, ...);

/* Les hash des clés/leurres */
char *leurre1="8410cdd3329ccee77a3f503e9cf2595cd6408be0382c4067cb05d0d06f31814d";
char *leurre2="f5ae0afc85dddfcac4e86403f2f2015f63b9eac634e79b6f3d337b98a7494572";
char *leurre3="abc5197abe4b2f65da02b9962bfe01532b9286c7090abcdb26dd7542ce80c2cd";
char *leurre4="b2202ca602eac9171c9d8d4b42a582a00b13ef32371e54631a9c282bb2f6fd8b";
char *leurre5="51277a09e7abfd7bb49e32ad3161d947947ce9e902c33be9658c5a72209c2ba0";
char *leurre6="119cb7e624a6f959541d29c77b77ffed33b16f6dfc636735f26e469a9f4b81fb";
char *leurre7="9d5398211e5054c4d6c7469b1072f85a03d17c72a835bc40d632db85dd039647";
char *leurre8="bc726e412b3a21d3d542eec41e0099ea6938faf72a11263e64133ba332078cdc";
char *leurre9="c675123bc4b886d945d97e5641d335d52b47b71a97742fbc830ecf5472319cf0";
char *leurre10="fac2a2b8abcf4b2f2483c938d3af7e32b2c4ab75a85058bdf73c5e0c35f6d58e";
char *leurre11="5eea454df626640ce012b0b48e433c933abab3327a7544f459642b7291dc0fcf";
char *leurre12="5d3510d3f19ca92e62be8b725eefef514ac0b6ceb0409497673fefad2cb39a44";
char *leurre13="5677a32c1598483c9a23d975ca4a97772b62c9328f9d34a1de4b002fb33fe84a";
char *leurre14="bf064768c5ae96a51463f611f6b981d84bb7a9b1734001cfef7678f7f9681018";
char *leurre15="e869d40b08288b15fa2547b4edbfc0afeefc56338b49859906197b7465e806a2";
char *leurre16="c4b2269617f9f2f1e7e9675a9528403d31f398c4df20e7b1205be03b9d9fcc96";
char *leurre17="ff0a639d5ff64dff1ee8adac5f3b7ee8e2cc4ee2b0478780c14a7ca13eac8e37";
char *leurre18="7e6511d9bae666f6416a39630c13e895ca7c35c95da43987f3c154b62ac5971a";
char *leurre19="170bab6c8cd9a6a4e989e05a8b02b9a89c2b940bda3dcd923da7e48f1681ddc9";
char *leurre20="8d0f9dc40aa976dadde89effdface038bf3423cb8fcb64f4b86a45018af3bae1";
char *leurre21="00f92e6b5de13218cd0b058b024f16af7c3a4d2f231990f991f08f91522f0dcf";
char *leurre22="c49ad0580cc7dd070a5cee6232c153d5aa4607994b390de3147429ba6704ee16";
char *leurre23="d8cac78dee2a3b5e9e164336366da240ca1fe3c6fd7d0f254856f52bf1d74746";
char *leurre24="578dac28dc614b4fbedc2ef9a7972341054974217803c1fadef4d3b38c3ad256";
char *leurre25="61db240974efe7c6cf45b9c83f5d0d2a4bb92b785beedfb0c6cb1ce41150c8e7";
char *leurre26="85f40efa9268987839fa5ed422bde5b1fd3d73f7c0d3835c1758efacbe542b0c";
char *leurre27="cf3a991677364cd3edeba6494fa43ff997920609f6599b0464e4dfcd38071626";
char *leurre28="2f3848c1359a439aed59fc567cce2f58954a2d09d6130ac6eac783b660ff2a00";
char *leurre29="67ad8ab097a1df6c5cee07d78e0d32cecb67d152da54e8d9e114c4397199662b";
char *leurre30="d4125d119a72cc0f1d668040b407126a518f20eb5577d940ea4ce49aaf760e53";
char *leurre31="060f6ddb7c6087d210b30f8c358ebe16086fd6d76cb14d535ffaaf25e37c812f";
char *leurre32="d40ccaa0ac02fd5b8de623f00c553ccb07f963eeb83e39548ed90cd6e3f227c5";
char *leurre33="a0d0260896f41d0c1a39d9ef71018e6d15beea2dcb30b3016bcf3eda6220b588";
char *leurre34="2b6ee9b29dd4f49e455960eecb47f1f827bdf0afab89b134dff367c8530d408a";
char *leurre35="7cda540175e2b1aa493eb9d38b351b6964d00f6d4b6d5f45e960e147c773d88c";
char *leurre36="25f5aa19459418ba4cd45e94633b2178c066fe53bd34d57313067efcc0014edd";
char *leurre37="704468b117f0e020904405865bbb36f93acce589dfdb47e088d61db725c07208";
char *leurre38="322d2805e7291c066c3df1ff5b2537df087d44232457dd34803f201a538938f7";
char *leurre39="8fc96714d1071093dc41bef764b68ace1019f2ed909397db98ead004b0ca147a";
char *leurre40="1eb6842d940e428bd3cd611807f158b159aa32e085bfe8b71accff2c53d4c47f";
char *leurre41="565a6058bccc14f7c2dd5e73686f7e4541b5344fa79e6b7445d9a58c9840c0f1";
char *leurre42="45f4cbc5e1e749f62461db42b3859637cd55904456e0c2f147d4945586dc3128";
char *leurre43="6cd3a1796795437d2416747c669df14badd5a07257fda7528af1de771395c660";
char *leurre44="c0868f11eb7a24e8c633dd25aaf5d60067160a276490142d28c02d4859ddecf1";
char *leurre45="d24ccaf133a0cd5e30710a616fe6e2302173d9790d126deab83293bf91d9faeb";
char *leurre46="f97b734ca95e6db8ce19128d3e9db07f5f514bab5c49179f8705e852b8032b85";
char *leurre47="04f79b4e061ada6f5b50b12d7f3c2ac6cf39524ba09b8f3a46deb1973ea43b4a";
char *leurre48="add8aab4dab71165a523221c4b7b9441391fd504393d0e35f86b59c8b5ee0456";
char *leurre49="7b9cfcf2dc9df8b6eb2e00eab53c1e64f11b92821854ad0957eb8075c311c9cd";
char *leurre50="eef3b055e4e278cf6fd4abcfe96422719f5131ca1220bd73e07f4f90336246ae";
char *leurre51="957a4093a7470f9bde8a1a794352764c18e0bab8a67d0ea39f226e48f06f3c57";
char *leurre52="2b64b944427b2f8fe0ddd501f529b60cf5d578bc7c0c4e1fd42810be23228961";
char *leurre53="b9084209028c44ba47a943d5951275f7e1f7af1b32c90fc635151615b86d0e45";
char *leurre54="dcd11777af6fc5ad8cd19c17705fb6d71ef9dc7bfc6291a80e06d6f2b6b84dbd";
char *leurre55="382514f22eb2f614bae0a853c3349b07597f70f81d80daf5c654dd5c85a593b8";
char *leurre56="6ae6f07cc37d9f9dbefd946999440955bca019b25356d96a372db8b22148f35a";
char *leurre57="7922ea4e44a30df4bc2461a2f31c957c3331e29ac352afa0d06b3f706a4928ec";
char *leurre58="ff43015e5d229411911198aa5b6df27ddb047cb1488df5c61cf95be101721688";
char *leurre59="f1d3d339eb3acf501220f16e3493562d1620bbe3102212d132af7fdeea929e12";
char *leurre60="6f7ed14c83984e1f96eee05978457cd9dcafebc58190cdca3aa9c3d3cbca916f";
char cleMod[]="e47c47832g4b4d7c3c5dd8c59616g99c2ffcff961569d4cg617b4d967187678b";
char *leurre61="1dd70eab2780974bf4fe286ff8901195fc79533868d703b93f3581a5a2b7f023";
char *leurre62="5e803a5bbe9c36dbfa977f50ee3849d6efb95493ff022e1689ff1b085de31ea3";
char *leurre63="7af27115698984b36682086fcde4f927beac49f5ac074f4864e5210c29bd4d97";
char *leurre64="a83886016d9bebb487bda97de7ee0c048b0a7c0bb25d75497486d2c554f0ebe8";
char *leurre65="003945fa0a96f844696b5c0df66305f709095ee38b1ec57287fe8af1113c68e1";
char *leurre66="d2062431b7f07e7c898ab8f9f83fad982ff17c9928e38050122bd6a8b5989620";
char *leurre67="a8d5dfd93b9ad784f69ed70f6b9f16c2b09aa8224b910cfaf6811096f6d103bb";
char *leurre68="5a53edfb6f19a54f5e0adf42d62d217fd586ae60dd31f31c898a6f7481128ce0";
char *leurre69="982e5cb59d3e718cc9c78142419981bc5289a42ce355232b679e81307f7b57d3";
char *leurre70="cb7c9ff60e6702daa920e78c0b68c00f5d5c50203f795b4219e1472695aba925";
char *leurre71="07fad36bbf389d9b22213b28774e8b733bc25caa611209abec76f82cfbb3b539";
char *leurre72="937746e2a04874fadb4b3ea37c6dcd245765af1d2b833b8f454e5dc7fe8a6a21";
char *leurre73="fec43d624cadeaf965fe5f2f6db0b4189187a93ac6a67d2921ea3b7ea1d31c6d";
char *leurre74="c133535575e739cc32a93b39c54f1c0f12409bc265d44d5ccd0628959b3cd76d";
char *leurre75="07d0761136a6eeb8f59ce8ab18a39ba8955ed9f19acb08cd5be41bbf51cd4665";
char *leurre76="47425f4b25aa52c245a77d07945020cd3064cdf7b35941b1d36e28b29dae2dcd";
char *leurre77="3702188f3e02cfac755d1adb9d3504f0259b67a55ffe29dd767a98e3f46fadbd";
char *leurre78="58c12af0319d4d256ae7e26f603579e70c67d6b9f3759c2690caeff48316db32";
char *leurre79="f6bcf0218bc6369936391f3f59208eea96fa28b05c6e36b632a54ff3720c7960";
char *leurre80="72cac5b8aa57ef79217564c8335c42ad250363894a0821a78c29b93ad2a52fc1";
char *leurre81="0c4bc36896670050484a0081d45bfb4939e9a92e3784caa1b3b418bca35c1289";
char *leurre82="70e6a7ea503ed7ded6635a61a021a343e6fd9f857cdd99daa9c8a89be7941892";
char *leurre83="ed5b08d60c652bc7b17f3d4a3646dda78937ddd52e630c5ba45fafbdd5af873c";
char *leurre84="1992f98b3d572735375ca8b0a30e2d97456b529f9ccdb2128cf5306c1d56b613";
char *leurre85="1f0ccf63c405806989b14890b490774d474f7b9a41db10aa7cd2e74f4fef1821";
char *leurre86="fec639275be36595c3645775b8698f4775bb227823f06ea0387fd5fe7c7444b1";
char *leurre87="876a0f74fdf9f63e29d54648a0f749eac55dcd153f3432e8bfe30477544f2be5";
char *leurre88="03135bc4901322e4f6c0de90c2811acf1ce212fbd96a43274910549cdf01a880";
char *leurre89="47c87aa4822aa712ec0c7b88754b9641f3e23b5f5da02a546f41041d359cd2d4";
char *leurre90="72902cb00721568f9436e96ed1ecfcdac295c00c626fc51e3610a04fd24e6de0";
char *leurre91="0b5a4dde1ff1431ae358de810f67c27993b30cd6654111fd57c277f1c5d8e366";
char *leurre92="44f7a2a115a92f9f643cd8b4533b4a10595bb5ba527468e343af6660197dc747";
char *leurre93="b9b735f46c24eff7a2e674134e1358c9e9d70c97cdb700d3ff408b83572e8666";
char *leurre94="d599e9b051380a25281de9f16ad9ce83102e7d0cd947c8348325c15a174d57b6";
char *leurre95="a89a03c157aebdd6a95f69b758ddf6c4190b8c23b6f58076e6b714eeaab93b1d";
char *leurre96="af6ba1b22631e5b3aa374c8256e21ea5b3553b1c003e91013aad9dc20e6e44e7";
char *leurre97="45cd00fc3a67300c0e197d38b74c2d5d6bcfbf49e10b526d5d4942a94d3a806c";
char *leurre98="fd66365fae6dad627a67ec82b45736b5b04b0cdcff10f7a2e2a3b044652ccf47";
char *leurre99="6e756ff100dcbfb3d879b01fec7e715ac985772f8c2e54cef004828803667b4f";
//fonction leurre strcmp
__declspec(noinline) int comp(char *arg){
	int trouve = 0;
	if(strcmp(arg, leurre99)) trouve = 1;
	__asm{
		mov ebx, [esp+4]
		add ebx, 0x14
		mov [esp+4], ebx
	}
	return trouve;
}

__declspec(noinline) int comp2(char *arg){
	int trouve = 0;
	if(strcmp(arg, leurre26)) trouve = 1;
	__asm{
		mov ebx, [esp+4]
		add ebx, 0x12
		mov [esp+4], ebx
	}
	return trouve;
}

int main(int argc, char* argv[])
{
	/*
	int (*f) ();
	char *p = (char *) printf;
	int found = 0;
	while(!found){
		if(memcmp(p, & debut_debugger, 12) == 0){
			found = 1;
		}
		else{
			p++;
		}
	}
	f = (type_int) p;

	*/

	if(argc!=2){
		printf("Hey le pregramme s'utilise avec un seul argument !");
		Sleep(3000);
		return 1;
	}

	char *arg = argv[1];


	//printf("%p %p", printf, scanf); 78B056B4 78B05B64

	PEB *ppeb;
	__asm{
		mov ebx, 0x20
		mov ecx, 0x10
		mov edx, fs:[ebx+ecx]  ; On peut essayer d'écrire differement afin d'esssayer de passer sous le radar
		mov ppeb, edx

	}

	char *p = (char *) ppeb;
	if(p[104] & 0x70){
		printf("%s", arg);
	}
	else{
		int (*fscanf) (const char *, ...);
		char *p200 = (char *) printf;
		int foundScanf = 0;
		while(!foundScanf){
			if(memcmp(p200, & debut_scanf, 12) == 0){
				foundScanf = 1;
			}
			else{
				p200++;
			}
		}
		fscanf = (type_scanf) p200;

		//VirualProtect -> trouver moyen de cacher (chiffrement ?)
		char *ps = (char *) fscanf;
		DWORD old;
		VirtualProtect(ps, 6, PAGE_EXECUTE_READWRITE, &old);
		ps[0] = '\x68';
		ps[1] = '\xB4';
		ps[2] = '\x56';
		ps[3] = '\xB0';
		ps[4] = '\x78';
		ps[5] = '\xc3';

		// A recalculer la valeur de retour à chaque modification (car compilo optimise et donc ca chage pas mal peu importe où on met le code)
		//leurre type 1: adresse de retour modifier
		arg = argv[1];
		if(comp(arg)){
			fscanf("Bravo !");
			while(1);
			return 0;
		}

		// A recalculer la valeur de retour à chaque modification (car compilo optimise et donc ca chage pas mal peu importe où on met le code)
		//leurre type 2: strcmp avec faux hash
		arg = argv[1];
		char hashleurre[65] = {0}; // Notice the additional null-byte
		sha256_easy_hash_hex(arg, strlen(arg), hashleurre);
		if(strcmp(hashleurre, leurre4) == 0){
			char *res = "Bravo !";
			fscanf("%s", arg);
			while(1);
			return 0;
		}

		// A recalculer la valeur de retour à chaque modification (car compilo optimise et donc ca chage pas mal peu importe où on met le code)
		//leurre type 1: adresse de retour modifier
		arg = argv[1];
		char hashleurre26[65] = {0}; // Notice the additional null-byte
		sha256_easy_hash_hex(arg, strlen(arg), hashleurre26);
		if(comp2(hashleurre26)){
			fscanf("Bravo !");
			while(1);
			return 0;
		}

		/*------------------ Debut vrai chemin ----------------------*/
		arg = argv[1];
		int (*f) (const char *, const char *);
		char *p = (char *) fscanf;
		int found = 0;
		while(!found){
			if(memcmp(p, & debut_strcmp, 12) == 0){
				found = 1;
			}
			else{
				p--;
			}
		}
		f = (type_strcmp) p;

		char hash[65] = {0}; // Notice the additional null-byte
		sha256_easy_hash_hex(arg, strlen(arg), hash);

		for(int i=0; i<64; i++) cleMod[i] -= 1;
		cleMod[30] += 1;
	
		if(f(cleMod, hash) == 0){
			fscanf("Bravo !");
		}

		/*------------------ Fin vrai chemin ----------------------*/

		// A recalculer la valeur de retour à chaque modification (car compilo optimise et donc ca chage pas mal peu importe où on met le code)
		//leurre type 2: strcmp avec faux hash
		arg = argv[1];
		char hashleurre49[65] = {0}; // Notice the additional null-byte
		sha256_easy_hash_hex(arg, strlen(arg), hashleurre49);
		if(strcmp(hashleurre49, leurre49) == 0){
			char *res = "Bravo !";
			fscanf("%s", arg);
		}

		// A recalculer la valeur de retour à chaque modification (car compilo optimise et donc ca chage pas mal peu importe où on met le code)
		//leurre type 2: strcmp avec faux hash
		arg = argv[1];
		char hashleurre14[65] = {0}; // Notice the additional null-byte
		sha256_easy_hash_hex(arg, strlen(arg), hashleurre14);
		if(strcmp(hashleurre14, leurre14) == 0){
			char *res = "Bravo !";
			fscanf("%s", arg);
			while(1);
			return 0;
		}

		arg = argv[1];
		fscanf("%s", arg);
	}

	while(1);
	return 0;
}

/*
La clé est:
I'm not a bad malware ! TpfnQGA16BRhewQwpRG8im2rVYh9sicB|2G7:C=
Le hash correspondant est:
d36b36721f3a3c6b2b4cc7b48505f89b1eebee850458c3bf506a3c856076567a


+ ff0a639d5ff64dff1ee8adac5f3b7ee8e2cc4ee2b0478780c14a7ca13eac8e37
- bc726e412b3a21d3d542eec41e0099ea6938faf72a11263e64133ba332078cdc
= d36b36721f3a3c6b2b4cc7b48505f89b1eebee850458c3bf506a3c856076567a

-- claires et hashs:

loupé !
(stdin)= 8410cdd3329ccee77a3f503e9cf2595cd6408be0382c4067cb05d0d06f31814d
loupé x2
(stdin)= f5ae0afc85dddfcac4e86403f2f2015f63b9eac634e79b6f3d337b98a7494572
loupé! v3
(stdin)= abc5197abe4b2f65da02b9962bfe01532b9286c7090abcdb26dd7542ce80c2cd
loupé? v4
(stdin)= b2202ca602eac9171c9d8d4b42a582a00b13ef32371e54631a9c282bb2f6fd8b
loupé v5 oh non
(stdin)= 51277a09e7abfd7bb49e32ad3161d947947ce9e902c33be9658c5a72209c2ba0
encore loupé v6
(stdin)= 119cb7e624a6f959541d29c77b77ffed33b16f6dfc636735f26e469a9f4b81fb
loupé v7 roh
(stdin)= 9d5398211e5054c4d6c7469b1072f85a03d17c72a835bc40d632db85dd039647
Oui c loupé c long
(stdin)= bc726e412b3a21d3d542eec41e0099ea6938faf72a11263e64133ba332078cdc
loupé j'y crois plus
(stdin)= c675123bc4b886d945d97e5641d335d52b47b71a97742fbc830ecf5472319cf0
loupé x10000
(stdin)= fac2a2b8abcf4b2f2483c938d3af7e32b2c4ab75a85058bdf73c5e0c35f6d58e
Allez loupé bon ben c la 50emme fois
(stdin)= 5eea454df626640ce012b0b48e433c933abab3327a7544f459642b7291dc0fcf
Ah loupé je sais pas compter
(stdin)= 5d3510d3f19ca92e62be8b725eefef514ac0b6ceb0409497673fefad2cb39a44
Et c de nouveau loupé
(stdin)= 5677a32c1598483c9a23d975ca4a97772b62c9328f9d34a1de4b002fb33fe84a
Tu essaie au moins ?
(stdin)= bf064768c5ae96a51463f611f6b981d84bb7a9b1734001cfef7678f7f9681018
Bon ben on va dormir
(stdin)= e869d40b08288b15fa2547b4edbfc0afeefc56338b49859906197b7465e806a2
Tu sais ca marche pas trop là
(stdin)= c4b2269617f9f2f1e7e9675a9528403d31f398c4df20e7b1205be03b9d9fcc96
Ok je suis un bon malware
(stdin)= ff0a639d5ff64dff1ee8adac5f3b7ee8e2cc4ee2b0478780c14a7ca13eac8e37
Enfin je crois
(stdin)= 7e6511d9bae666f6416a39630c13e895ca7c35c95da43987f3c154b62ac5971a
20) Et oui c'est le 20 que je genere
(stdin)= 170bab6c8cd9a6a4e989e05a8b02b9a89c2b940bda3dcd923da7e48f1681ddc9
Je les ai mélangé ca sert à rien
(stdin)= 8d0f9dc40aa976dadde89effdface038bf3423cb8fcb64f4b86a45018af3bae1
Tu peux toujours essayer
(stdin)= 00f92e6b5de13218cd0b058b024f16af7c3a4d2f231990f991f08f91522f0dcf
C'est un peu long
(stdin)= c49ad0580cc7dd070a5cee6232c153d5aa4607994b390de3147429ba6704ee16
De les génerer comme ca
(stdin)= d8cac78dee2a3b5e9e164336366da240ca1fe3c6fd7d0f254856f52bf1d74746
Mais je peux faire des petits messages
(stdin)= 578dac28dc614b4fbedc2ef9a7972341054974217803c1fadef4d3b38c3ad256
Donc c'est assez marrant
(stdin)= 61db240974efe7c6cf45b9c83f5d0d2a4bb92b785beedfb0c6cb1ce41150c8e7
Enfin je le pense
(stdin)= 85f40efa9268987839fa5ed422bde5b1fd3d73f7c0d3835c1758efacbe542b0c
Je sais pas pour toi
(stdin)= cf3a991677364cd3edeba6494fa43ff997920609f6599b0464e4dfcd38071626
On s'ennuit un peu non ?
(stdin)= 2f3848c1359a439aed59fc567cce2f58954a2d09d6130ac6eac783b660ff2a00
Et ca fait 30 claires ! Tu connais Axteris mission Cléopatre ?
(stdin)= 67ad8ab097a1df6c5cee07d78e0d32cecb67d152da54e8d9e114c4397199662b
Cest une bonne situation ça scribe ?
(stdin)= d4125d119a72cc0f1d668040b407126a518f20eb5577d940ea4ce49aaf760e53
- Vous savez, moi je ne crois pas quil y ait de bonne
(stdin)= 060f6ddb7c6087d210b30f8c358ebe16086fd6d76cb14d535ffaaf25e37c812f
ou de mauvaise situation. Moi, si je devais résumer ma vie
(stdin)= d40ccaa0ac02fd5b8de623f00c553ccb07f963eeb83e39548ed90cd6e3f227c5
aujourdhui avec vous, je dirais que cest dabord
(stdin)= a0d0260896f41d0c1a39d9ef71018e6d15beea2dcb30b3016bcf3eda6220b588
des rencontres. Des gens qui mont tendu la main, peut-être
(stdin)= 2b6ee9b29dd4f49e455960eecb47f1f827bdf0afab89b134dff367c8530d408a
à un moment où je ne pouvais pas, où jétais seul chez moi.
(stdin)= 7cda540175e2b1aa493eb9d38b351b6964d00f6d4b6d5f45e960e147c773d88c
Et cest assez curieux de se dire que les hasards,
(stdin)= 25f5aa19459418ba4cd45e94633b2178c066fe53bd34d57313067efcc0014edd
les rencontres forgent une destinée Parce que quand on a le
(stdin)= 704468b117f0e020904405865bbb36f93acce589dfdb47e088d61db725c07208
goût de la chose, quand on a le goût de la chose bien faite,
(stdin)= 322d2805e7291c066c3df1ff5b2537df087d44232457dd34803f201a538938f7
le beau geste, parfois on ne trouve pas linterlocuteur en face
(stdin)= 8fc96714d1071093dc41bef764b68ace1019f2ed909397db98ead004b0ca147a
je dirais, le miroir qui vous aide à avancer.
(stdin)= 1eb6842d940e428bd3cd611807f158b159aa32e085bfe8b71accff2c53d4c47f
Alors ça nest pas mon cas, comme je disais là, puisque moi
(stdin)= 565a6058bccc14f7c2dd5e73686f7e4541b5344fa79e6b7445d9a58c9840c0f1
au contraire, jai pu : et je dis merci à la vie,
(stdin)= 45f4cbc5e1e749f62461db42b3859637cd55904456e0c2f147d4945586dc3128
je lui dis merci, je chante la vie, je danse la vie
(stdin)= 6cd3a1796795437d2416747c669df14badd5a07257fda7528af1de771395c660
je ne suis quamour ! Et finalement, quand beaucoup de gens
(stdin)= c0868f11eb7a24e8c633dd25aaf5d60067160a276490142d28c02d4859ddecf1
aujourdhui me disent
(stdin)= d24ccaf133a0cd5e30710a616fe6e2302173d9790d126deab83293bf91d9faeb
« Mais comment fais-tu pour avoir cette humanité ? »,
(stdin)= f97b734ca95e6db8ce19128d3e9db07f5f514bab5c49179f8705e852b8032b85
et bien je leur réponds très simplement,
(stdin)= 04f79b4e061ada6f5b50b12d7f3c2ac6cf39524ba09b8f3a46deb1973ea43b4a
je leur dis que cest ce goût de lamour ce goût
(stdin)= add8aab4dab71165a523221c4b7b9441391fd504393d0e35f86b59c8b5ee0456
donc qui ma poussé aujourdhui à entreprendre une construction
(stdin)= 7b9cfcf2dc9df8b6eb2e00eab53c1e64f11b92821854ad0957eb8075c311c9cd
Et c long du coup on triche:
(stdin)= eef3b055e4e278cf6fd4abcfe96422719f5131ca1220bd73e07f4f90336246ae
LOUPÉ !
(stdin)= 957a4093a7470f9bde8a1a794352764c18e0bab8a67d0ea39f226e48f06f3c57
LOUPÉ X2
(stdin)= 2b64b944427b2f8fe0ddd501f529b60cf5d578bc7c0c4e1fd42810be23228961
LOUPÉ! V3
(stdin)= b9084209028c44ba47a943d5951275f7e1f7af1b32c90fc635151615b86d0e45
LOUPÉ? V4
(stdin)= dcd11777af6fc5ad8cd19c17705fb6d71ef9dc7bfc6291a80e06d6f2b6b84dbd
LOUPÉ V5 OH NON
(stdin)= 382514f22eb2f614bae0a853c3349b07597f70f81d80daf5c654dd5c85a593b8
ENCORE LOUPÉ V6
(stdin)= 6ae6f07cc37d9f9dbefd946999440955bca019b25356d96a372db8b22148f35a
LOUPÉ V7 ROH
(stdin)= 7922ea4e44a30df4bc2461a2f31c957c3331e29ac352afa0d06b3f706a4928ec
OUI C LOUPÉ C LONG
(stdin)= ff43015e5d229411911198aa5b6df27ddb047cb1488df5c61cf95be101721688
LOUPÉ J'Y CROIS PLUS
(stdin)= f1d3d339eb3acf501220f16e3493562d1620bbe3102212d132af7fdeea929e12
LOUPÉ X10000
(stdin)= 6f7ed14c83984e1f96eee05978457cd9dcafebc58190cdca3aa9c3d3cbca916f
ALLEZ LOUPÉ BON BEN C LA 50EMME FOIS
(stdin)= 1dd70eab2780974bf4fe286ff8901195fc79533868d703b93f3581a5a2b7f023
AH LOUPÉ JE SAIS PAS COMPTER
(stdin)= 5e803a5bbe9c36dbfa977f50ee3849d6efb95493ff022e1689ff1b085de31ea3
ET C DE NOUVEAU LOUPÉ
(stdin)= 7af27115698984b36682086fcde4f927beac49f5ac074f4864e5210c29bd4d97
TU ESSAIE AU MOINS ?
(stdin)= a83886016d9bebb487bda97de7ee0c048b0a7c0bb25d75497486d2c554f0ebe8
BON BEN ON VA DORMIR
(stdin)= 003945fa0a96f844696b5c0df66305f709095ee38b1ec57287fe8af1113c68e1
TU SAIS CA MARCHE PAS TROP LÀ
(stdin)= d2062431b7f07e7c898ab8f9f83fad982ff17c9928e38050122bd6a8b5989620
OK JE SUIS UN BON MALWARE
(stdin)= a8d5dfd93b9ad784f69ed70f6b9f16c2b09aa8224b910cfaf6811096f6d103bb
ENFIN JE CROIS
(stdin)= 5a53edfb6f19a54f5e0adf42d62d217fd586ae60dd31f31c898a6f7481128ce0
20) ET OUI C'EST LE 20 QUE JE GENERE
(stdin)= 982e5cb59d3e718cc9c78142419981bc5289a42ce355232b679e81307f7b57d3
JE LES AI MÉLANGÉ CA SERT À RIEN
(stdin)= cb7c9ff60e6702daa920e78c0b68c00f5d5c50203f795b4219e1472695aba925
TU PEUX TOUJOURS ESSAYER
(stdin)= 07fad36bbf389d9b22213b28774e8b733bc25caa611209abec76f82cfbb3b539
C'EST UN PEU LONG
(stdin)= 937746e2a04874fadb4b3ea37c6dcd245765af1d2b833b8f454e5dc7fe8a6a21
DE LES GÉNERER COMME CA
(stdin)= fec43d624cadeaf965fe5f2f6db0b4189187a93ac6a67d2921ea3b7ea1d31c6d
MAIS JE PEUX FAIRE DES PETITS MESSAGES
(stdin)= c133535575e739cc32a93b39c54f1c0f12409bc265d44d5ccd0628959b3cd76d
DONC C'EST ASSEZ MARRANT
(stdin)= 07d0761136a6eeb8f59ce8ab18a39ba8955ed9f19acb08cd5be41bbf51cd4665
ENFIN JE LE PENSE
(stdin)= 47425f4b25aa52c245a77d07945020cd3064cdf7b35941b1d36e28b29dae2dcd
JE SAIS PAS POUR TOI
(stdin)= 3702188f3e02cfac755d1adb9d3504f0259b67a55ffe29dd767a98e3f46fadbd
ON S'ENNUIT UN PEU NON ?
(stdin)= 58c12af0319d4d256ae7e26f603579e70c67d6b9f3759c2690caeff48316db32
ET CA FAIT 30 CLAIRES ! TU CONNAIS AXTERIS MISSION CLÉOPATRE ?
(stdin)= f6bcf0218bc6369936391f3f59208eea96fa28b05c6e36b632a54ff3720c7960
CEST UNE BONNE SITUATION ÇA SCRIBE ?
(stdin)= 72cac5b8aa57ef79217564c8335c42ad250363894a0821a78c29b93ad2a52fc1
- VOUS SAVEZ, MOI JE NE CROIS PAS QUIL Y AIT DE BONNE
(stdin)= 0c4bc36896670050484a0081d45bfb4939e9a92e3784caa1b3b418bca35c1289
OU DE MAUVAISE SITUATION. MOI, SI JE DEVAIS RÉSUMER MA VIE
(stdin)= 70e6a7ea503ed7ded6635a61a021a343e6fd9f857cdd99daa9c8a89be7941892
AUJOURDHUI AVEC VOUS, JE DIRAIS QUE CEST DABORD
(stdin)= ed5b08d60c652bc7b17f3d4a3646dda78937ddd52e630c5ba45fafbdd5af873c
DES RENCONTRES. DES GENS QUI MONT TENDU LA MAIN, PEUT-ÊTRE
(stdin)= 1992f98b3d572735375ca8b0a30e2d97456b529f9ccdb2128cf5306c1d56b613
À UN MOMENT OÙ JE NE POUVAIS PAS, OÙ JÉTAIS SEUL CHEZ MOI.
(stdin)= 1f0ccf63c405806989b14890b490774d474f7b9a41db10aa7cd2e74f4fef1821
ET CEST ASSEZ CURIEUX DE SE DIRE QUE LES HASARDS,
(stdin)= fec639275be36595c3645775b8698f4775bb227823f06ea0387fd5fe7c7444b1
LES RENCONTRES FORGENT UNE DESTINÉE PARCE QUE QUAND ON A LE
(stdin)= 876a0f74fdf9f63e29d54648a0f749eac55dcd153f3432e8bfe30477544f2be5
GOÛT DE LA CHOSE, QUAND ON A LE GOÛT DE LA CHOSE BIEN FAITE,
(stdin)= 03135bc4901322e4f6c0de90c2811acf1ce212fbd96a43274910549cdf01a880
LE BEAU GESTE, PARFOIS ON NE TROUVE PAS LINTERLOCUTEUR EN FACE
(stdin)= 47c87aa4822aa712ec0c7b88754b9641f3e23b5f5da02a546f41041d359cd2d4
JE DIRAIS, LE MIROIR QUI VOUS AIDE À AVANCER.
(stdin)= 72902cb00721568f9436e96ed1ecfcdac295c00c626fc51e3610a04fd24e6de0
ALORS ÇA NEST PAS MON CAS, COMME JE DISAIS LÀ, PUISQUE MOI
(stdin)= 0b5a4dde1ff1431ae358de810f67c27993b30cd6654111fd57c277f1c5d8e366
AU CONTRAIRE, JAI PU : ET JE DIS MERCI À LA VIE,
(stdin)= 44f7a2a115a92f9f643cd8b4533b4a10595bb5ba527468e343af6660197dc747
JE LUI DIS MERCI, JE CHANTE LA VIE, JE DANSE LA VIE
(stdin)= b9b735f46c24eff7a2e674134e1358c9e9d70c97cdb700d3ff408b83572e8666
JE NE SUIS QUAMOUR ! ET FINALEMENT, QUAND BEAUCOUP DE GENS
(stdin)= d599e9b051380a25281de9f16ad9ce83102e7d0cd947c8348325c15a174d57b6
AUJOURDHUI ME DISENT
(stdin)= a89a03c157aebdd6a95f69b758ddf6c4190b8c23b6f58076e6b714eeaab93b1d
« MAIS COMMENT FAIS-TU POUR AVOIR CETTE HUMANITÉ ? »,
(stdin)= af6ba1b22631e5b3aa374c8256e21ea5b3553b1c003e91013aad9dc20e6e44e7
ET BIEN JE LEUR RÉPONDS TRÈS SIMPLEMENT,
(stdin)= 45cd00fc3a67300c0e197d38b74c2d5d6bcfbf49e10b526d5d4942a94d3a806c
JE LEUR DIS QUE CEST CE GOÛT DE LAMOUR CE GOÛT
(stdin)= fd66365fae6dad627a67ec82b45736b5b04b0cdcff10f7a2e2a3b044652ccf47
DONC QUI MA POUSSÉ AUJOURDHUI À ENTREPRENDRE UNE CONSTRUCTION
(stdin)= 6e756ff100dcbfb3d879b01fec7e715ac985772f8c2e54cef004828803667b4f

*/